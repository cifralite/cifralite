@page "/cadastro/"
@inject UsuarioService UsuarioService
@inject NavigationManager NavigationManager
@attribute [Authorize]

<PageTitle>Cadastra-se no Cifralite</PageTitle>

<div id="TelaDeCadastro">
    <h1>Cadastre-se</h1>
    <p>Crie agora sua conta no <strong>Cifralite</strong></p>

    <EditForm Model="_novoUsuario" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <div id="Formulario">
            <InputText class="campoDeRegistro" @bind-Value="_novoUsuario.Nome" type="text" placeholder="Nome" required />
            <InputText class="campoDeRegistro" @bind-Value="_novoUsuario.Email" type="email" placeholder="E-mail" required />
            <InputText class="campoDeRegistro" @bind-Value="_novoUsuario.Senha" type="password" placeholder="Senha" required />

            <button type="submit" id="BotaoCadastrar">Criar conta</button>
            <a href="#">Esqueci minha senha</a>
            <a href="#">Já tenho uma conta</a>
        </div>
    </EditForm>
</div>

@code {
    private RegistroModel _novoUsuario {get; set;} = new RegistroModel();
    private async Task HandleValidSubmit() {
        await UsuarioService.AdicionarUsuario(_novoUsuario.Nome, _novoUsuario.Email, _novoUsuario.Senha);
        NavigationManager.NavigateTo("/login/");
    }

    private class RegistroModel {
        [Required(ErrorMessage = "O Nome é obrigatório")]
        public string Nome {get; set;} = string.Empty;
        [Required(ErrorMessage = "O E-mail é obrigatório")]
        public string Email {get; set;} = string.Empty;
        [Required(ErrorMessage = "A Senha é obrigatória")]
        public string Senha {get; set;} = string.Empty;
    }
}